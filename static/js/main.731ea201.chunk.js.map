{"version":3,"sources":["home/homeComponent.js","busMRTService/BusMRTComponent.js","travelPlanner/TravelPlannerComponent.js","interchangeMap/InterchangeMapComponent.js","community/CommunityComponent.js","career/careerComponent.js","App.js","serviceWorker.js","index.js"],"names":["Home","Container","fluid","Grid","Row","columns","stretched","style","height","Column","to","Segment","raised","Item","Group","Image","size","src","Content","verticalAlign","Header","textAlign","key","rows","Table","HeaderCell","Body","Message","attached","header","value","Form","Input","label","List","padded","Card","Description","divided","as","centered","width","App","className","color","format","ticking","exact","path","component","BusMRT","Career","TravelPlanner","InterchangeMap","Community","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2SAIe,SAASA,IACpB,OACI,kBAACC,EAAA,EAAD,CAAWC,OAAO,GACd,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,IAAN,CAAUC,QAAS,EAAGC,WAAS,EAACC,MAAO,CAACC,OAAO,QAC3C,kBAACL,EAAA,EAAKM,OAAN,CAAaH,WAAW,GACpB,kBAAC,IAAD,CAAMI,GAAG,QAAO,kBAACC,EAAA,EAAD,CAASC,QAAQ,EAAML,MAAO,CAACC,OAAO,SAAS,kBAACK,EAAA,EAAKC,MAAN,KAC7D,kBAACD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKE,MAAN,CAAYC,KAAK,SAASC,IAAI,qBAC9B,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,cAAc,UAAS,kBAACN,EAAA,EAAKO,OAAN,kCAI7C,kBAACjB,EAAA,EAAKM,OAAN,CAAaH,WAAW,GACpB,kBAAC,IAAD,CAAMI,GAAG,kBAAiB,kBAACC,EAAA,EAAD,CAASC,QAAQ,EAAML,MAAO,CAACC,OAAO,SAAS,kBAACK,EAAA,EAAKC,MAAN,KACvE,kBAACD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKE,MAAN,CAAYC,KAAK,SAASC,IAAI,4BAC9B,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,cAAc,UAAS,kBAACN,EAAA,EAAKO,OAAN,+BAMrD,kBAACjB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,IAAN,CAAUC,QAAS,EAAGC,WAAS,EAACC,MAAO,CAACC,OAAO,QAC3C,kBAACL,EAAA,EAAKM,OAAN,KACI,kBAAC,IAAD,CAAMC,GAAG,mBAAkB,kBAACC,EAAA,EAAD,CAASC,QAAQ,EAAML,MAAO,CAACC,OAAO,SAAS,kBAACK,EAAA,EAAKC,MAAN,KACxE,kBAACD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKE,MAAN,CAAYC,KAAK,SAASC,IAAI,6BAC9B,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,cAAc,UAAS,kBAACN,EAAA,EAAKO,OAAN,8BAI7C,kBAACjB,EAAA,EAAKM,OAAN,CAAaH,WAAW,GACpB,kBAAC,IAAD,CAAMI,GAAG,cAAa,kBAACC,EAAA,EAAD,CAASC,QAAQ,EAAML,MAAO,CAACC,OAAO,SAAS,kBAACK,EAAA,EAAKC,MAAN,KACjE,kBAACD,EAAA,EAAKK,QAAN,CAAcC,cAAc,MAAKZ,MAAO,CAACc,UAAU,WAAW,kBAACR,EAAA,EAAKO,OAAN,mBAC9D,kBAACP,EAAA,EAAKE,MAAN,CAAYC,KAAK,SAASC,IAAI,sBAAsBE,cAAc,SAASZ,MAAO,CAACc,UAAU,gBAGrG,kBAAClB,EAAA,EAAKM,OAAN,CAAaF,MAAO,CAACC,OAAO,QACxB,kBAAC,IAAD,CAAME,GAAG,iBAAgB,kBAACC,EAAA,EAAD,CAASC,QAAQ,EAAML,MAAO,CAACC,OAAO,SAAS,kBAACK,EAAA,EAAKC,MAAN,KACtE,kBAACD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKE,MAAN,CAAYC,KAAK,SAASC,IAAI,2BAC9B,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,cAAc,UAAS,kBAACN,EAAA,EAAKO,OAAN,8BAMrD,kBAACjB,EAAA,EAAD,CAAME,QAAS,GACX,kBAACF,EAAA,EAAKC,IAAN,CAAUC,QAAS,EAAGC,WAAS,GAC3B,kBAACH,EAAA,EAAKM,OAAN,KACI,kBAAC,IAAD,CAAMC,GAAG,WAAU,kBAACC,EAAA,EAAD,CAASC,QAAQ,EAAML,MAAO,CAACC,OAAO,SAAS,kBAACK,EAAA,EAAKC,MAAN,KAChE,kBAACD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKE,MAAN,CAAYC,KAAK,SAASC,IAAI,qBAC9B,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,cAAc,UAAS,kBAACN,EAAA,EAAKO,OAAN,qBAI7C,kBAACjB,EAAA,EAAKM,OAAN,KACI,kBAAC,IAAD,CAAMC,GAAG,aAAY,kBAACC,EAAA,EAAD,CAASC,QAAQ,EAAML,MAAO,CAACC,OAAO,SAAS,kBAACK,EAAA,EAAKC,MAAN,KAClE,kBAACD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKE,MAAN,CAAYC,KAAK,SAASC,IAAI,uBAC9B,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,cAAc,UAAS,kBAACN,EAAA,EAAKO,OAAN,uBAI7C,kBAACjB,EAAA,EAAKM,OAAN,KACI,kBAAC,IAAD,CAAMC,GAAG,aAAY,kBAACC,EAAA,EAAD,CAASC,QAAQ,EAAML,MAAO,CAACC,OAAO,SAAS,kBAACK,EAAA,EAAKC,MAAN,KAClE,kBAACD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKE,MAAN,CAAYC,KAAK,SAASC,IAAI,uBAC9B,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,cAAc,UAAS,kBAACN,EAAA,EAAKO,OAAN,8B,8BCvElD,SAASpB,IAIpB,OACI,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,CAAME,QAAQ,SACV,kBAACF,EAAA,EAAKC,IAAN,CAAUE,WAAS,GACf,kBAACH,EAAA,EAAKM,OAAN,CAAaa,IAAI,aAAajB,QAAS,EAAGkB,KAAM,GACxC,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAMJ,OAAP,KACI,kBAACI,EAAA,EAAMpB,IAAP,KACI,kBAACoB,EAAA,EAAMC,WAAP,gBACA,kBAACD,EAAA,EAAMC,WAAP,kBACA,kBAACD,EAAA,EAAMC,WAAP,yBAGR,kBAACD,EAAA,EAAME,KAAP,KAhBZ,MAqBA,kBAACvB,EAAA,EAAKM,OAAN,CAAaJ,QAAS,EAAGkB,KAAM,GAC3B,kBAACI,EAAA,EAAD,CAASC,UAAQ,EAACC,OAAO,mBACzB,kBAACL,EAAA,EAAD,KACI,kBAACA,EAAA,EAAME,KAAP,KAvBN,KA2BE,kBAACvB,EAAA,EAAD,CAAME,QAAS,EAAGC,WAAS,GACvB,kBAACH,EAAA,EAAKM,OAAN,KACI,kBAACE,EAAA,EAAD,KACI,kBAACgB,EAAA,EAAD,CAASC,UAAQ,EAACC,OAAO,oBA7BtC,KAiCK,kBAAC1B,EAAA,EAAKM,OAAN,KACI,kBAACE,EAAA,EAAD,KACI,6FACA,kBAAC,IAAD,CAAQmB,MAAM,4F,sBCvCnC,SAAS9B,IAGpB,OACI,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,CAAME,QAAQ,SACV,kBAACF,EAAA,EAAKC,IAAN,CAAUE,WAAS,GACf,kBAACH,EAAA,EAAKM,OAAN,CAAaJ,QAAS,EAAGkB,KAAM,GAC3B,kBAACZ,EAAA,EAAD,KACI,kBAACoB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAY9B,OAAK,EAAC+B,MAAM,yBACxB,kBAACF,EAAA,EAAKC,MAAN,CAAY9B,OAAK,EAAC+B,MAAM,wBAGhC,kBAAC9B,EAAA,EAAD,CAAME,QAAS,EAAGC,WAAS,GACvB,kBAACH,EAAA,EAAKM,OAAN,KACI,kBAACE,EAAA,EAAD,KACI,kGACA,kBAAC,IAAD,CAAQmB,MAAM,qGAGtB,kBAAC3B,EAAA,EAAKM,OAAN,KACI,kBAACE,EAAA,EAAD,KACI,kBAACgB,EAAA,EAAD,CAASC,UAAQ,EAACC,OAAO,eArBzC,OA2BA,kBAAC1B,EAAA,EAAKM,OAAN,CAAaJ,QAAS,EAAGkB,KAAM,GAC3B,kBAACZ,EAAA,EAAD,KACI,kBAACgB,EAAA,EAAD,CAASC,UAAQ,EAACC,OAAO,iBACzB,kBAACK,EAAA,EAAD,KA/BV,S,aCFH,SAASlC,IAEpB,OACI,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,CAAME,QAAQ,SACV,kBAACF,EAAA,EAAKC,IAAN,CAAUE,WAAS,GACf,kBAACH,EAAA,EAAKM,OAAN,CAAaJ,QAAS,EAAGkB,KAAM,GAC3B,kBAACZ,EAAA,EAAD,KACI,kBAACgB,EAAA,EAAD,CAASC,UAAQ,EAACC,OAAO,gCACzB,kBAACL,EAAA,EAAD,KACI,kBAACA,EAAA,EAAME,KAAP,KATd,MAcM,kBAACf,EAAA,EAAD,KACI,kBAACgB,EAAA,EAAD,CAASC,UAAQ,EAACC,OAAO,UACzB,kBAAC1B,EAAA,EAAD,CAAME,QAAQ,QAAO8B,QAAM,GACvB,kBAAChC,EAAA,EAAKM,OAAN,KACI,kBAAC2B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKlB,QAAN,KACI,kBAACkB,EAAA,EAAKhB,OAAN,eACA,kBAACgB,EAAA,EAAKC,YAAN,gCAIZ,kBAAClC,EAAA,EAAKM,OAAN,KACI,kBAAC2B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKlB,QAAN,KACI,kBAACkB,EAAA,EAAKhB,OAAN,eACA,kBAACgB,EAAA,EAAKC,YAAN,uBAIZ,kBAAClC,EAAA,EAAKM,OAAN,KACI,kBAAC2B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKlB,QAAN,KACI,kBAACkB,EAAA,EAAKhB,OAAN,eACA,kBAACgB,EAAA,EAAKC,YAAN,kBAIZ,kBAAClC,EAAA,EAAKM,OAAN,KACI,kBAAC2B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKlB,QAAN,KACI,kBAACkB,EAAA,EAAKhB,OAAN,eACA,kBAACgB,EAAA,EAAKC,YAAN,kBAMpB,kBAAC1B,EAAA,EAAD,KACI,kBAACgB,EAAA,EAAD,CAASC,UAAQ,EAACC,OAAO,cACzB,kBAAC1B,EAAA,EAAD,CAAMgC,QAAM,EAAC9B,QAAQ,SACjB,kBAACF,EAAA,EAAKM,OAAN,KACI,kBAAC2B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKlB,QAAN,KACI,kBAACkB,EAAA,EAAKhB,OAAN,+BAIZ,kBAACjB,EAAA,EAAKM,OAAN,KACI,kBAAC2B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKlB,QAAN,KACI,kBAACkB,EAAA,EAAKhB,OAAN,4BAIZ,kBAACjB,EAAA,EAAKM,OAAN,KACI,kBAAC2B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKlB,QAAN,KACI,kBAACkB,EAAA,EAAKhB,OAAN,wBAIZ,kBAACjB,EAAA,EAAKM,OAAN,KACI,kBAAC2B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKlB,QAAN,KACI,kBAACkB,EAAA,EAAKhB,OAAN,6BAIZ,kBAACjB,EAAA,EAAKM,OAAN,KACI,kBAAC2B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKlB,QAAN,KACI,kBAACkB,EAAA,EAAKhB,OAAN,eAIZ,kBAACjB,EAAA,EAAKM,OAAN,KACI,kBAAC2B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKlB,QAAN,KACI,kBAACkB,EAAA,EAAKhB,OAAN,mBAKhB,kBAACjB,EAAA,EAAD,CAAME,QAAQ,QAAQ8B,QAAM,GACxB,kBAAChC,EAAA,EAAKM,OAAN,KACI,kBAAC2B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKlB,QAAN,KACI,kBAACkB,EAAA,EAAKhB,OAAN,gBAIZ,kBAACjB,EAAA,EAAKM,OAAN,KACI,kBAAC2B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKlB,QAAN,KACI,kBAACkB,EAAA,EAAKhB,OAAN,2BAIZ,kBAACjB,EAAA,EAAKM,OAAN,KACI,kBAAC2B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKlB,QAAN,KACI,kBAACkB,EAAA,EAAKhB,OAAN,oBAIZ,kBAACjB,EAAA,EAAKM,OAAN,KACI,kBAAC2B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKlB,QAAN,KACI,kBAACkB,EAAA,EAAKhB,OAAN,uBAOxB,kBAACjB,EAAA,EAAKM,OAAN,CAAaJ,QAAS,EAAGkB,KAAM,GAC3B,kBAACZ,EAAA,EAAD,KACI,kBAACgB,EAAA,EAAD,CAASC,UAAQ,EAACC,OAAO,2B,sBCnItC,SAAS7B,IACpB,OACI,kBAACC,EAAA,EAAD,CAAWC,OAAO,EAAMmB,UAAU,aAC9B,kBAACV,EAAA,EAAD,CAASJ,MAAO,CAACC,OAAO,SACpB,kBAACL,EAAA,EAAD,CAAME,QAAQ,QAAQiC,SAAO,GACzB,kBAACnC,EAAA,EAAKC,IAAN,KACI,kBAACD,EAAA,EAAKM,OAAN,MAGA,kBAACN,EAAA,EAAKM,OAAN,KACI,kBAACW,EAAA,EAAD,CAAQmB,GAAG,MAAX,6CACA,kBAACpC,EAAA,EAAD,CAAMqC,UAAQ,EAACL,QAAM,GACjB,kBAAChC,EAAA,EAAKC,IAAN,CAAUC,QAAQ,SACd,kBAACF,EAAA,EAAKM,OAAN,CAAagC,MAAO,GAAG,kBAAC9B,EAAA,EAAD,KAAS,mDAChC,kBAACR,EAAA,EAAKM,OAAN,CAAagC,MAAO,GAAG,kBAAC9B,EAAA,EAAD,4BAE3B,kBAACR,EAAA,EAAKM,OAAN,CAAagC,MAAO,GAAG,kBAAC9B,EAAA,EAAD,4BAE3B,kBAACI,EAAA,EAAD,CAAOE,IAAI,sBAAsBD,KAAK,QAAQwB,UAAQ,KAE1D,kBAACrC,EAAA,EAAKM,OAAN,UCpBT,SAAST,IACpB,OACI,kBAACC,EAAA,EAAD,CAAWC,OAAO,EAAMmB,UAAU,aAC9B,kBAACV,EAAA,EAAD,KACI,kBAACR,EAAA,EAAD,CAAME,QAAQ,SACV,kBAACF,EAAA,EAAKC,IAAN,KACI,kBAACD,EAAA,EAAKM,OAAN,CAAagC,MAAO,IAChB,kBAAC5B,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKE,MAAN,CAAYC,KAAK,SAASC,IAAI,qBAC9B,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,cAAc,UAAS,kBAACN,EAAA,EAAKO,OAAN,0BAG7C,+MACA,iPACA,wGAEJ,kBAACjB,EAAA,EAAKM,OAAN,CAAaH,WAAS,EAACkC,UAAQ,GAC3B,kBAAC7B,EAAA,EAAD,CAASJ,MAAO,CAACC,OAAO,SACpB,6FACA,kBAAC,IAAD,CAAQsB,MAAM,uDCS/BY,MAnBf,WACI,OACE,kBAACzC,EAAA,EAAD,CAAWC,OAAO,EAAMyC,UAAU,OAChC,kBAAChB,EAAA,EAAD,CAASpB,MAAO,CAACc,UAAU,SAASuB,MAAM,QAAQ,kBAACjB,EAAA,EAAQP,OAAT,2CAClD,kBAACO,EAAA,EAAD,CAASpB,MAAO,CAACc,UAAU,QAAQuB,MAAM,QAAQ,kBAACjB,EAAA,EAAQP,OAAT,KAAgB,kBAAC,IAAD,CAAOyB,OAAQ,SAAUC,SAAS,KAAyB,2BAAG,kBAAC,IAAD,CAAOD,OAAQ,mBAC9I,kBAAClB,EAAA,EAAD,CAASgB,UAAU,OACjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,UAAWjD,IACjC,kBAAC,IAAD,CAAOgD,KAAK,OAAOC,UAAWC,IAC9B,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWE,IACjC,kBAAC,IAAD,CAAOH,KAAK,iBAAiBC,UAAWG,IACxC,kBAAC,IAAD,CAAOJ,KAAK,kBAAkBC,UAAWI,IACzC,kBAAC,IAAD,CAAOL,KAAK,aAAaC,UAAWK,QCd9BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.731ea201.chunk.js","sourcesContent":["import React from 'react';\nimport {Grid, Item, Segment, Container } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nexport default function Home() {\n    return (\n        <Container fluid={true} >\n            <Grid>\n                <Grid.Row columns={2} stretched style={{height:'25%'}}>\n                    <Grid.Column stretched={true}>\n                        <Link to='/mrt'><Segment raised={true} style={{height:'100%'}}><Item.Group>\n                          <Item>\n                            <Item.Image size='medium' src='./res/busMRT.png' />\n                            <Item.Content verticalAlign='middle'><Item.Header>Bus and MRT arrival</Item.Header></Item.Content>\n                          </Item>\n                        </Item.Group></Segment></Link>\n                    </Grid.Column>\n                    <Grid.Column stretched={true} >\n                        <Link to='/travelPlanner'><Segment raised={true} style={{height:'100%'}}><Item.Group>\n                          <Item>\n                            <Item.Image size='medium' src='./res/travelPlanner.png' />\n                            <Item.Content verticalAlign='middle'><Item.Header>Travel Planner</Item.Header></Item.Content>\n                          </Item>\n                        </Item.Group></Segment></Link>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Grid>\n                <Grid.Row columns={3} stretched style={{height:'25%'}}>\n                    <Grid.Column >\n                        <Link to='/interchangemap'><Segment raised={true} style={{height:'100%'}}><Item.Group>\n                          <Item>\n                            <Item.Image size='medium' src='./res/interchangeMap.png' />\n                            <Item.Content verticalAlign='middle'><Item.Header>Interchange Map</Item.Header></Item.Content>\n                          </Item>\n                        </Item.Group></Segment></Link>\n                    </Grid.Column>\n                    <Grid.Column stretched={true}>\n                        <Link to='/community'><Segment raised={true} style={{height:'100%'}}><Item.Group>\n                            <Item.Content verticalAlign='top'style={{textAlign:'center'}}><Item.Header>Community</Item.Header></Item.Content>\n                            <Item.Image size='medium' src='./res/community.png' verticalAlign='bottom' style={{textAlign:'center'}}/>\n                        </Item.Group></Segment></Link>\n                    </Grid.Column>\n                    <Grid.Column style={{height:'25%'}}>\n                        <Link to='/buggyService'><Segment raised={true} style={{height:'100%'}}><Item.Group>\n                          <Item>\n                            <Item.Image size='medium' src='./res/buggyService.png' />\n                            <Item.Content verticalAlign='middle'><Item.Header>Buggy Service</Item.Header></Item.Content>\n                          </Item>\n                        </Item.Group></Segment></Link>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Grid columns={3}>\n                <Grid.Row columns={3} stretched>\n                    <Grid.Column>\n                        <Link to='/career'><Segment raised={true} style={{height:'100%'}}><Item.Group>\n                          <Item>\n                            <Item.Image size='medium' src='./res/career.png' />\n                            <Item.Content verticalAlign='middle'><Item.Header>Career</Item.Header></Item.Content>\n                          </Item>\n                        </Item.Group></Segment></Link>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Link to='/feedback'><Segment raised={true} style={{height:'100%'}}><Item.Group>\n                          <Item>\n                            <Item.Image size='medium' src='./res/feedback.png' />\n                            <Item.Content verticalAlign='middle'><Item.Header>Feedback</Item.Header></Item.Content>\n                          </Item>\n                        </Item.Group></Segment></Link>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Link to='/language'><Segment raised={true} style={{height:'100%'}}><Item.Group>\n                          <Item>\n                            <Item.Image size='medium' src='./res/language.png' />\n                            <Item.Content verticalAlign='middle'><Item.Header>Tukar Bahasa</Item.Header></Item.Content>\n                          </Item>\n                        </Item.Group></Segment></Link>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Container>\n    )\n}\n","import React from 'react';\nimport { Container, Grid, Table, Segment, Message } from 'semantic-ui-react';\nimport QRCode from 'qrcode.react';\n\nexport default function Home() {\n  let busServices = [],\n      trainArrivals = [],\n      trafficUpdates = [];\n    return (\n        <Container fluid>\n            <Grid columns='equal'>\n                <Grid.Row stretched>\n                    <Grid.Column key='busService' columns={1} rows={2}>\n                            <Table>\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell>Service</Table.HeaderCell>\n                                        <Table.HeaderCell>Berth No.</Table.HeaderCell>\n                                        <Table.HeaderCell>Departure Time</Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Body>\n                                    {busServices}\n                                </Table.Body>\n                            </Table>\n                    </Grid.Column>\n                    <Grid.Column columns={1} rows={2}>\n                        <Message attached header='Train Arrivals' />\n                        <Table>\n                            <Table.Body>\n                                {trainArrivals}\n                            </Table.Body>\n                        </Table>\n                        <Grid columns={2} stretched>\n                            <Grid.Column>\n                                <Segment>\n                                    <Message attached header='Traffic Updates' />\n                                    {trafficUpdates}\n                                </Segment>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Segment>\n                                    <p>Scan the QR code below for OneMonitoring for more traffic news</p>\n                                    <QRCode value='https://www.mytransport.sg/content/mytransport/home/myconcierge/trafficnews.html' />\n                                </Segment>\n                            </Grid.Column>\n                        </Grid>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Container>\n    )\n}\n","import React from 'react';\nimport { Container, Grid, List, Segment, Message, Form } from 'semantic-ui-react';\nimport QRCode from 'qrcode.react';\n\nexport default function Home() {\n  let routeList = [],\n      travelsList = [];\n    return (\n        <Container fluid>\n            <Grid columns='equal'>\n                <Grid.Row stretched>\n                    <Grid.Column columns={1} rows={2}>\n                        <Segment>\n                            <Form>\n                                <Form.Input fluid label='Enter Starting Point' />\n                                <Form.Input fluid label='Enter Destination' />\n                            </Form>\n                        </Segment>\n                        <Grid columns={2} stretched>\n                            <Grid.Column>\n                                <Segment>\n                                    <p>Scan the QR code below to calculate the total amount of fare needed</p>\n                                    <QRCode value='https://www.mytransport.sg/content/mytransport/home/commuting/busservices.html#Fare_Calculator' />\n                                </Segment>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Segment>\n                                    <Message attached header='Time Taken' />\n                                    {travelsList}\n                                </Segment>\n                            </Grid.Column>\n                        </Grid>\n                    </Grid.Column>\n                    <Grid.Column columns={1} rows={2}>\n                        <Segment>\n                            <Message attached header='Travel Route' />\n                            <List>\n                                {routeList}\n                            </List>\n                        </Segment>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Container>\n    )\n}\n","import React from 'react';\nimport { Container, Grid, Segment, Message, Card, Table } from 'semantic-ui-react';\n\nexport default function Home() {\n    let busBerths=[];\n    return (\n        <Container fluid>\n            <Grid columns='equal'>\n                <Grid.Row stretched>\n                    <Grid.Column columns={1} rows={2}>\n                        <Segment>\n                            <Message attached header='Boarding Berth Bus Services' />\n                            <Table>\n                                <Table.Body>\n                                    {busBerths}\n                                </Table.Body>\n                            </Table>\n                        </Segment>\n                        <Segment>\n                            <Message attached header='Shops' />\n                            <Grid columns='equal'padded>\n                                <Grid.Column>\n                                    <Card>\n                                        <Card.Content>\n                                            <Card.Header>#01-23</Card.Header>\n                                            <Card.Description>Woodland's Food Shop</Card.Description>\n                                        </Card.Content>\n                                    </Card>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Card>\n                                        <Card.Content>\n                                            <Card.Header>#01-24</Card.Header>\n                                            <Card.Description>Nasi Padang</Card.Description>\n                                        </Card.Content>\n                                    </Card>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Card>\n                                        <Card.Content>\n                                            <Card.Header>#01-25</Card.Header>\n                                            <Card.Description>UTaste</Card.Description>\n                                        </Card.Content>\n                                    </Card>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Card>\n                                        <Card.Content>\n                                            <Card.Header>#01-26</Card.Header>\n                                            <Card.Description>Buzz</Card.Description>\n                                        </Card.Content>\n                                    </Card>\n                                </Grid.Column>\n                            </Grid>\n                        </Segment>\n                        <Segment>\n                            <Message attached header='Amenities' />\n                            <Grid padded columns='equal'>\n                                <Grid.Column>\n                                    <Card>\n                                        <Card.Content>\n                                            <Card.Header>Transit Link Office</Card.Header>\n                                        </Card.Content>\n                                    </Card>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Card>\n                                        <Card.Content>\n                                            <Card.Header>Passenger Office</Card.Header>\n                                        </Card.Content>\n                                    </Card>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Card>\n                                        <Card.Content>\n                                            <Card.Header>NTWU Canteen</Card.Header>\n                                        </Card.Content>\n                                    </Card>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Card>\n                                        <Card.Content>\n                                            <Card.Header>Add Value Machine</Card.Header>\n                                        </Card.Content>\n                                    </Card>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Card>\n                                        <Card.Content>\n                                            <Card.Header>ATM</Card.Header>\n                                        </Card.Content>\n                                    </Card>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Card>\n                                        <Card.Content>\n                                            <Card.Header>Stairs</Card.Header>\n                                        </Card.Content>\n                                    </Card>\n                                </Grid.Column>\n                            </Grid>\n                            <Grid columns='equal' padded>\n                                <Grid.Column>\n                                    <Card>\n                                        <Card.Content>\n                                            <Card.Header>Ramp</Card.Header>\n                                        </Card.Content>\n                                    </Card>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Card>\n                                        <Card.Content>\n                                            <Card.Header>Passenger Lifts</Card.Header>\n                                        </Card.Content>\n                                    </Card>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Card>\n                                        <Card.Content>\n                                            <Card.Header>Washroom</Card.Header>\n                                        </Card.Content>\n                                    </Card>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Card>\n                                        <Card.Content>\n                                            <Card.Header>Washroom</Card.Header>\n                                        </Card.Content>\n                                    </Card>\n                                </Grid.Column>\n                            </Grid>\n                        </Segment>\n                    </Grid.Column>\n                    <Grid.Column columns={1} rows={2}>\n                        <Segment>\n                            <Message attached header='Woodlands MRT Map' />\n                        </Segment>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Container>\n    )\n}\n","import React from 'react';\nimport {Grid, Segment, Container, Header, Image } from 'semantic-ui-react';\nimport QRCode from 'qrcode.react';\n\nexport default function Home() {\n    return (\n        <Container fluid={true} textAlign='justified'>\n            <Segment style={{height:'100%'}}>\n                <Grid columns='equal' divided>\n                    <Grid.Row>\n                        <Grid.Column>\n\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Header as='h1'>Get the latest news around the community!</Header>\n                            <Grid centered padded>\n                                <Grid.Row columns='equal'>\n                                    <Grid.Column width={6}><Segment><p>Sembawang Our Home</p></Segment></Grid.Column>\n                                    <Grid.Column width={6}><Segment>Kampung Admiralty</Segment></Grid.Column>\n                                </Grid.Row>\n                                <Grid.Column width={6}><Segment>Kampung Sembawang</Segment></Grid.Column>\n                            </Grid>\n                            <Image src='./res/community.png' size='large' centered />\n                        </Grid.Column>\n                        <Grid.Column>\n\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Segment>\n        </Container>\n    )\n}\n","import React from 'react';\nimport {Grid, Segment, Container, Header, Item } from 'semantic-ui-react';\nimport QRCode from 'qrcode.react';\n\nexport default function Home() {\n    return (\n        <Container fluid={true} textAlign='justified'>\n            <Segment>\n                <Grid columns='equal'>\n                    <Grid.Row>\n                        <Grid.Column width={12}>\n                            <Item.Group>\n                                <Item>\n                                    <Item.Image size='medium' src='./res/career.png' />\n                                    <Item.Content verticalAlign='middle'><Item.Header>Why Join SMRT?</Item.Header></Item.Content>\n                                </Item>\n                            </Item.Group>\n                            <p>Here at SMRT we are commited to nurturing and developing the employees with the right skills, operational exposure and opportunities, to help them realise their true potential.</p>\n                            <p>We are looking for those who want to male an impact in Singapore's transport ndustry by taking care of the needs of the customers and providing them with safe, reliable and customer oriented transport services.</p>\n                            <p>Come on board SMRT and join us on this meaningful and rewarding journey!</p>\n                        </Grid.Column>\n                        <Grid.Column stretched centered>\n                            <Segment style={{height:'100%'}}>\n                                <p>Scan the QR code below to look  at our available job listings!</p>\n                                <QRCode value='https://www.smrt.com.sg/Join-Us/Job-Listings' />\n                            </Segment>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Segment>\n        </Container>\n    )\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container, Message } from 'semantic-ui-react';\nimport Clock from 'react-live-clock';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\n\nimport Home from './home/homeComponent';\nimport BusMRT from './busMRTService/BusMRTComponent';\nimport TravelPlanner from './travelPlanner/TravelPlannerComponent';\nimport InterchangeMap from './interchangeMap/InterchangeMapComponent';\nimport Community from './community/CommunityComponent';\nimport Career from './career/careerComponent';\n\nfunction App() {\n    return (\n      <Container fluid={true} className=\"App\">\n        <Message style={{textAlign:\"center\",color:\"red\"}}><Message.Header>Welcome to Woodland's Interchange</Message.Header></Message>\n        <Message style={{textAlign:\"right\",color:\"red\"}}><Message.Header><Clock format={\"h:mm A\"} ticking={true} /></Message.Header><p><Clock format={\"Mo MMM, YYYY\"} /></p></Message>\n        <Message className=\"App\">\n          <Router >\n              <Route exact path=\"/\" component={Home} />\n              <Route path='/mrt' component={BusMRT} />\n              <Route path='/career' component={Career} />\n              <Route path='/travelPlanner' component={TravelPlanner} />\n              <Route path='/interchangeMap' component={InterchangeMap} />\n              <Route path='/community' component={Community} />\n          </Router>\n        </Message>\n      </Container>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}